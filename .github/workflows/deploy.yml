name: Nom-nom-nom Deployment

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install and Build
        run: |
          npm install
          npm run build -- --base=/
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nom-nom-nom-build
          path: dist/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: nom-nom-nom-build
          path: dist/

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Set deployment variables
        run: |
          echo "DEPLOY_PATH=/var/www/mentor-hub" >> $GITHUB_ENV
          echo "DEPLOY_DOMAIN=mentor-hub.ru" >> $GITHUB_ENV

      - name: Prepare server directory
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
            "sudo mkdir -p $DEPLOY_PATH && \
             sudo chown -R ${{ secrets.SSH_USER }}:${{ secrets.SSH_USER }} $DEPLOY_PATH"

      - name: Deploy files
        run: |
          tar -czf deploy.tar.gz -C dist .
          scp -i ~/.ssh/id_rsa deploy.tar.gz ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:/tmp/
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
            "tar -xzf /tmp/deploy.tar.gz -C $DEPLOY_PATH && rm /tmp/deploy.tar.gz"
          rm deploy.tar.gz

      - name: Set correct permissions
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
            "sudo chown -R www-data:www-data $DEPLOY_PATH && \
             sudo find $DEPLOY_PATH -type d -exec chmod 755 {} \; && \
             sudo find $DEPLOY_PATH -type f -exec chmod 644 {} \;"

      - name: Configure Nginx for master
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOT'
          sudo tee /etc/nginx/sites-available/mentor-hub.conf > /dev/null << 'EOF'
          server {
              listen 80;
              server_name mentor-hub.ru www.mentor-hub.ru;
              return 301 https://$host$request_uri;
          }

          server {
              listen 443 ssl http2;
              server_name mentor-hub.ru www.mentor-hub.ru;

              ssl_certificate /etc/letsencrypt/live/mentor-hub.ru/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/mentor-hub.ru/privkey.pem;
              include /etc/letsencrypt/options-ssl-nginx.conf;
              ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

              location / {
                  root /var/www/mentor-hub;
                  try_files $uri $uri/ /index.html;
                  add_header Cache-Control "public, max-age=3600";
                  add_header X-Frame-Options "SAMEORIGIN";
                  add_header X-Content-Type-Options "nosniff";
              }

              location /api/ {
                  proxy_pass http://localhost:3000/api/;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_connect_timeout 30s;
                  proxy_send_timeout 30s;
                  proxy_read_timeout 30s;
              }

              location /api/docs {
                  proxy_pass http://localhost:3000;
                  proxy_http_version 1.1;
                  proxy_connect_timeout 600;
                  proxy_send_timeout 600;
                  proxy_read_timeout 600;
                  send_timeout 600;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }

              location /api/docs/oauth2-redirect.html {
                  proxy_pass http://localhost:3000/api/docs/oauth2-redirect.html;
                  proxy_http_version 1.1;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
              }

              location = /api/docs/favicon-32x32.png {
                  alias /var/www/mentor-hub-api/node_modules/swagger-ui-dist/favicon-32x32.png;
                  expires 1y;
                  add_header Cache-Control "public";
              }

              access_log /var/log/nginx/mentor-hub.access.log;
              error_log /var/log/nginx/mentor-hub.error.log;
          }
          EOF

          sudo ln -sf /etc/nginx/sites-available/mentor-hub.conf /etc/nginx/sites-enabled/
          sudo nginx -t && sudo systemctl restart nginx
          EOT

      - name: Verify deployment
        run: |
          echo "Testing deployment at $DEPLOY_DOMAIN"
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
            "curl -vk https://$DEPLOY_DOMAIN || echo 'Verification failed'"
